{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"xre",
				"xred2xcart"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "#!/usr/bin/python3\n# -*- coding: utf-8 -*- \n\"\"\"\nTo use this template, please install Siman package https://github.com/dimonaks/siman/wiki\n\"\"\"\nfrom __future__ import division, unicode_literals, absolute_import, print_function\n\nif 1:\n    import sys\n    # sys.path.append('/home/aksenov/Simulation_wrapper/siman') #path to siman package\n    from siman import header\n    from siman.header import printlog, runBash\n\n    # from siman.SSHTools import SSHTools\n    from siman.calc_manage   import (smart_structure_read, update_des, add_loop, res_loop, add, res, complete_run)\n    from siman.database      import read_database, write_database\n    from siman.set_functions import read_vasp_sets\n\n    \n    if 0:\n        #run this once to make migration from old database\n        from siman.header import pickle_module_migration_script\n        pickle_module_migration_script()\n\n\n    header.conv, header.varset, size_on_start = read_database()\n    header.struct_des = update_des(header.struct_des, header.MANUALLY_ADDED); #read manually added calculations from project_conf.py file\n    db                = header.db # main database dictionary\n\n    import project_sets # should be after read_database\n    varset = read_vasp_sets(project_sets.user_vasp_sets, override_global = 0) #read user sets\n\n\n\n\n\"\"\"Control\"\"\"\nsave = 1\nheader.warnings = 'neyY'\nheader.warnings = 'yY'\n# header.check_job = 1\n# header.siman_run = 0\nheader.copy_to_cluster_flag = 0\n# header.corenum = 5\n# header.schedule_system = 'SLURM'\n\n\n\n\"\"\"Start working\"\"\"\n# db['HPES'] = [0.1,0.2,0.3]\nfrom my_functions import  PES_scan\nfrom LFP_structures import *\n\n\ndef restore():\n    # st = smart_structure_read('LFP_Pvac///LiFePO4_Pvac_in1uc.if.1/1.POSCAR')\n    # res('LiFePO4_Pvac_in1uc.if', '1', 1, input_st = st, it_folder = 'LFP_Pvac')\n\n    st = smart_structure_read('recitationLiFePO4///LiFePO4122.1/1.POSCAR')\n    res('LiFePO4122', '1', 1, up = 'up1', input_st = st, it_folder = 'recitationLiFePO4')\n\n\n# LFP1.set.printme()\n# LFP1.jmol(r = 1)\n\n\n\n# restore()\n\n# LFP1.set.printme()\n\n# namelist = PES_scan(submit = 0, cl = LFPsPvac)\n\n\n\n\n# import process_pes \n\n\n\n\n\n\n\n\n\"\"\"End working\"\"\"\n\n\n\n\n\n\n\n\n\ncomplete_run(header.close_run)\n\n\n\nif save:\n    write_database(db, header.conv, header.varset, size_on_start)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"\"\"\nTODO:\nисправить calc[id].path[\"output\"] для U_ramping - вроде сделано\n\n\n0) read_geometry(), Если переменная не найдена, то подставляется [None] - это не очень удобно и лучше сделать просто None.\n1) read project_conf explicitly from here and not from header - maybe not needed. The values from project_conf can be needed everywhere in siman and header is universal file for siman \n2) перенести настройки matplotlib из header в конкретные функции, которые строят графики\n3) project_sets.update_sets(varset) нужно удалить, она остается пока для этого проекта\n\n4) inherit_option = continue и sequence_set совместно не тестировались!\n\n5) sequence_set and self.associated_outcars ????\n\n!How to make tables and pictures more straightforward?\n!How to make inheritance of last relaxed configuration more straightforward? - добавить возможность продолжения расчёта\n\n!Для нового проекта нужно подумать об объединении папки geo с исходными структурами и выходной папки; Лучше все что касается отдельного расчета хранить в одной папке, просто использовать разные имена для файлов или подпапки.\n\n\n!Добавление нового атома подразумевает набор стандартных действий. Написать маленькую функцию для этого. Сейчас код подобной функции используется\nв двух местах: внутри create_segregation_cases() и add_impurity().add()\n\n\n!gbpos в самом старте определяется вручную для первой версии и просто копируется для других версий.\n\n\n!make_incar_and_copy_all проверить magmom\n\n\n\n! В классе Structure() добавить методы: \nудалить атом, добавить атом, заменить атом; \nнаследовать rprimd; растянуть;\nпотом с помощью этих методов упростить функции inherit_icalc и add_impurity\n\n\nChanges to siman2; please move this section to siman2 folder.\n1. latex_table() moved to functions.py\n\n\n\"\"\"\n\n",
			"file": "main.py",
			"file_size": 4824,
			"file_write_time": 131950604575087585,
			"settings":
			{
				"buffer_size": 4034,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "LFP_structures.py",
			"settings":
			{
				"buffer_size": 574,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/irina/simanrc.py",
			"settings":
			{
				"buffer_size": 1652,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "recitationLiFePO4/LiFePO4122.1/1.OUTCAR",
			"settings":
			{
				"buffer_size": 4185880,
				"line_ending": "Unix"
			}
		},
		{
			"file": "project_conf.py",
			"settings":
			{
				"buffer_size": 2141,
				"line_ending": "Unix"
			}
		},
		{
			"file": "my_functions.py",
			"settings":
			{
				"buffer_size": 5302,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import os \nimport  numpy as np\nimport matplotlib as mpl\nfrom matplotlib import cm\n\n\n\nfrom siman import header\ndb = header.db\n\nfrom my_functions import calc_solution_energies, modify, energy2color, write_jmol_script\n\n\ndmulist, xlist =  calc_solution_energies(db['HPES']) #\n\ndmulist, xlist, namelist = modify(dmulist, xlist, db['HPES']) #\n\ncolors = energy2color(dmulist) #\n\nwrite_jmol_script(LFPsPvac_1uc.end, colors, xlist, local_path = 'D:/PES', shift = (-0.1,0.0,0)) #\n",
			"file": "process_pes.py",
			"file_size": 470,
			"file_write_time": 131950459715859587,
			"settings":
			{
				"buffer_size": 470,
				"line_ending": "Unix"
			}
		},
		{
			"file": "xyz/Henergy.jmol",
			"settings":
			{
				"buffer_size": 5549,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "project_sets.py",
			"settings":
			{
				"buffer_size": 3546,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/cathode.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/cathode.sublime-build",
					""
				],
				[
					"Packages/User/cathode.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/User/cathode.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/irina/LFP/project_conf.py",
		"/usr/lib/python3.6/dbm/__init__.py",
		"/usr/local/lib/python3.6/dist-packages/siman/database.py",
		"/home/irina/LFP/process_pes.py",
		"/usr/local/lib/python3.6/dist-packages/siman/calc_manage.py",
		"/usr/local/lib/python3.6/dist-packages/siman/header.py",
		"/home/irina/.config/sublime-text-3/Packages/User/cathode.sublime-build",
		"/home/irina/.config/sublime-text-3/Packages/User/python3.sublime-build",
		"/home/irina/.config/sublime-text-3/Packages/User/LFP.sublime-build",
		"/home/irina/LFP/main.py"
	],
	"find":
	{
		"height": 44.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"mag_packet",
			"mom",
			"moment",
			"magneti",
			"add"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 6,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4034,
						"regions":
						{
						},
						"selection":
						[
							[
								1975,
								1975
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1104.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "LFP_structures.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 574,
						"regions":
						{
						},
						"selection":
						[
							[
								48,
								48
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/irina/simanrc.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1652,
						"regions":
						{
						},
						"selection":
						[
							[
								440,
								440
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 77.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "recitationLiFePO4/LiFePO4122.1/1.OUTCAR",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4185880,
						"regions":
						{
						},
						"selection":
						[
							[
								400,
								400
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "project_conf.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2141,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 69.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "my_functions.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5302,
						"regions":
						{
						},
						"selection":
						[
							[
								379,
								379
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 770.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "process_pes.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 470,
						"regions":
						{
						},
						"selection":
						[
							[
								273,
								273
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 138.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "xyz/Henergy.jmol",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5549,
						"regions":
						{
						},
						"selection":
						[
							[
								144,
								144
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "project_sets.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3546,
						"regions":
						{
						},
						"selection":
						[
							[
								1397,
								1397
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1587.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 32.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 482.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/cathode.sublime-build",
	"project": "LFP.sublime-project",
	"replace":
	{
		"height": 60.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
